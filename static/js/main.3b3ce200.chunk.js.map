{"version":3,"sources":["components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","reportWebVitals.js","index.js","components/ContactList/ContactList.module.css"],"names":["ContactForm","state","contacts","name","number","handleChange","event","setState","currentTarget","value","handleAddContact","preventDefault","props","onSubmit","reset","this","type","onChange","pattern","title","required","placeholder","React","Component","Filter","ContactList","ondeleteContact","className","style","listContact","map","id","contactItem","onClick","App","filter","formSubmit","data","find","o","toLowerCase","alert","newContact","uuidv4","prevState","deleteContact","contactId","contact","changeFilter","getVisibleContacts","normalizedFilter","includes","prevProps","localStorage","setItem","JSON","stringify","parsedContacts","parse","getItem","console","log","visibleContacts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.3b3ce200.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass ContactForm extends React.Component {\n    state = {\n        contacts: [],\n        name: '',\n        number: '',\n    };\n\n    handleChange = event => {\n        // console.log(event.currentTarget);\n        // console.log(event.currentTarget.name);\n        // console.log(event.currentTarget.value);\n        this.setState({\n            [event.currentTarget.name]: event.currentTarget.value,\n        });\n    };\n\n    handleAddContact = event => {\n        event.preventDefault();\n        // console.log(this.state);\n        this.props.onSubmit(this.state);\n        this.reset();\n    };\n    reset = () => {\n        this.setState({ name: '', number: '' });\n    };\n    render() {\n        return (\n            <form onSubmit={this.handleAddContact}>\n                <label>\n                    Name\n                    <input\n                        type=\"text\"\n                        value={this.state.name}\n                        onChange={this.handleChange}\n                        name=\"name\"\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                        required\n                        placeholder=\"Name Surname\"\n                    />\n                </label>\n                <label>\n                    Number\n                    <input\n                        type=\"tel\"\n                        name=\"number\"\n                        value={this.state.number}\n                        onChange={this.handleChange}\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                        required\n                        placeholder=\"111-11-11\"\n                    />\n                </label>\n                <button type=\"submit\">Add contact</button>\n            </form>\n        );\n    }\n}\n\nexport default ContactForm;\n\nContactForm.propTypes = {\n    contacts: PropTypes.array,\n    name: PropTypes.string,\n    number: PropTypes.number,\n    handleAddContact: PropTypes.func,\n    handleChange: PropTypes.func,\n};\n\n// handleNameChange = event => {\n//     // console.log(event.currentTarget.value);\n//     this.setState({name: event.currentTarget.value})\n// };\n\n// handleNumberChange = event => {\n//     // console.log(event.currentTarget.value);\n//     this.setState({number: event.currentTarget.value})\n// };\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ value, onChange }) => (\n    <label>\n        <p>Find contacts by name</p>\n        <input type=\"text\" value={value} onChange={onChange} />\n    </label>\n);\n\nexport default Filter;\n\nFilter.propTypes = {\n    value: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport style from './ContactList.module.css';\nimport PropTypes from 'prop-types';\n\nconst ContactList = ({ contacts, ondeleteContact }) => (\n    <ul className={style.listContact}>\n        {contacts.map(({ id, name, number }) => (\n            <li key={id} className={style.contactItem}>\n                <p>\n                    &#9742; {name}: {number}\n                </p>\n                <button type=\"button\" onClick={() => ondeleteContact(id)}>\n                    Delete\n                </button>\n            </li>\n        ))}\n    </ul>\n);\n\nexport default ContactList;\n\nContactList.propTypes = {\n    ondeleteContact: PropTypes.func,\n    contacts: PropTypes.array,\n};\n","import React from 'react';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport './App.css';\n\nclass App extends React.Component {\n    state = {\n        contacts: [\n            // { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n            // { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n            // { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n            // { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n        ],\n        // name: \"\",\n        // number: \"\",\n        filter: '',\n    };\n\n    formSubmit = data => {\n        // console.log(data.name);\n        // console.log(this.state.contacts);\n\n        let obj = this.state.contacts.find(\n            o => o.name.toLowerCase() === data.name.toLowerCase(),\n        );\n\n        if (!obj) {\n            const newContact = {\n                id: uuidv4(),\n                name: data.name,\n                number: data.number,\n            };\n            this.setState(prevState => ({\n                contacts: [newContact, ...prevState.contacts],\n            }));\n        } else {\n            alert(`${data.name} is already in contact`);\n        }\n\n        // this.setState((prevState) => ({\n        //   contacts: [newContact, ...prevState.contacts],\n        // }));\n    };\n\n    deleteContact = contactId => {\n        this.setState(prevState => ({\n            contacts: prevState.contacts.filter(\n                contact => contact.id !== contactId,\n            ),\n        }));\n    };\n\n    changeFilter = event => {\n        this.setState({ filter: event.currentTarget.value });\n    };\n\n    getVisibleContacts = () => {\n        const { filter, contacts } = this.state;\n        const normalizedFilter = filter.toLowerCase();\n        return contacts.filter(contact =>\n            contact.name.toLowerCase().includes(normalizedFilter),\n        );\n    };\n\n    componentDidUpdate(prevProps, prevState) {\n        // console.log('this DidUpdate');\n        // console.log(prevState);\n        // console.log(this.state); вызывать при проверке условия\n        if (this.state.contacts !== prevState.contacts) {\n            // console.log('Обновились contacts');\n            localStorage.setItem(\n                'contacts',\n                JSON.stringify(this.state.contacts),\n            );\n        }\n    }\n\n    componentDidMount() {\n        // console.log('this DidMount');\n        // const contacts = localStorage.getItem('contacts');\n        // console.log(contacts);\n        const parsedContacts = JSON.parse(localStorage.getItem('contacts'));\n        console.log(parsedContacts);\n        if (parsedContacts) {\n            this.setState({ contacts: parsedContacts });\n        }\n        // setTimeout(() => {\n        // this.setState({ contacts: parsedContacts });\n        // }, 2000);\n    }\n\n    render() {\n        // console.log('render app');\n        const { filter } = this.state;\n        const visibleContacts = this.getVisibleContacts();\n        return (\n            <div>\n                <div className=\"App\">\n                    <h1>Phonebook</h1>\n                    <ContactForm onSubmit={this.formSubmit} />\n\n                    <h2>Contacts</h2>\n\n                    <Filter value={filter} onChange={this.changeFilter} />\n                    <ContactList\n                        contacts={visibleContacts}\n                        ondeleteContact={this.deleteContact}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactList_contactItem__3sXDo\",\"listContact\":\"ContactList_listContact__3TLpG\"};"],"sourceRoot":""}